# juju list-clouds
Cloud        Regions  Default        Type        Description
aws               12  us-east-1      ec2         Amazon Web Services
aws-china          1  cn-north-1     ec2         Amazon China
aws-gov            1  us-gov-west-1  ec2         Amazon (USA Government)
azure             18  centralus      azure       Microsoft Azure
azure-china        2  chinaeast      azure       Microsoft Azure China
cloudsigma         5  hnl            cloudsigma  CloudSigma Cloud
google             4  us-east1       gce         Google Cloud Platform
joyent             6  eu-ams-1       joyent      Joyent Cloud
rackspace          6  dfw            rackspace   Rackspace Cloud
localhost          1  localhost      lxd         LXD Container Hypervisor

Try 'list-regions <cloud>' to see available regions.
'show-cloud <cloud>' or 'regions --format yaml <cloud>' can be used to see region endpoints.
'add-cloud' can add private clouds or private infrastructure.
Update the known public clouds with 'update-clouds'.

root@juju-build:~# juju update-clouds
Fetching latest public cloud list...
Your list of public clouds is up to date, see `juju clouds`.
root@juju-build:~# juju add-credential azure
Enter credential name: azure
Auth Types
interactive*
service-principal-secret

Select auth-type: interactive
Enter subscription-id: ^C
root@juju-build:~# azure account list    
info:    Executing command account list
data:    Name                     Id                                    Current  State  
data:    -----------------------  ------------------------------------  -------  -------
data:    Canonical - West Europe  fc60e5a6-c868-43f4-a364-6b765f3546e3  true     Enabled
info:    account list command OK
root@juju-build:~# juju add-credential azure
Enter credential name: azure
Auth Types
interactive*
service-principal-secret

Select auth-type: 
Enter subscription-id: fc60e5a6-c868-43f4-a364-6b765f3546e3
Initiating interactive authentication.

To sign in, use a web browser to open the page https://aka.ms/devicelogin and enter the code D8EHHKZ2E to authenticate.

ERROR finalizing credential: autorest#WithErrorUnlessStatusCode: POST https://login.windows.net/3af56810-cd49-4e6c-add7-9cf25d2371dc/oauth2/token?api-version=1.0 failed with 400 Bad Request: StatusCode=400
root@juju-build:~# curl -XPOST https://login.windows.net/3af56810-cd49-4e6c-add7-9cf25d2371dc/oauth2/token?api-version=1.0 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN""http://www.w3.org/TR/html4/strict.dtd">
<HTML><HEAD><TITLE>Length Required</TITLE>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=us-ascii"></HEAD>
<BODY><h2>Length Required</h2>
<hr><p>HTTP Error 411. The request must be chunked or have a content length.</p>
</BODY></HTML>
root@juju-build:~# juju list-credentials
Cloud  Credentials
aws    canonical

root@juju-build:~# juju add-credential azure
Enter credential name: azure
Auth Types
interactive*
service-principal-secret

Select auth-type: 
Enter subscription-id: fc60e5a6-c868-43f4-a364-6b765f3546e3
Initiating interactive authentication.

To sign in, use a web browser to open the page https://aka.ms/devicelogin and enter the code DADBBHYUC to authenticate.

Authenticated as "Samuel Cozannet".
Creating/updating service principal.
Assigning Owner role to service principal.
Credentials added for cloud azure.

root@juju-build:~# ls
ingress.yaml  k8s.yaml  work
root@juju-build:~# git pull https://github.com/madeden/blogposts
fatal: Not a git repository (or any of the parent directories): .git
root@juju-build:~# git clone https://github.com/madeden/blogposts
Cloning into 'blogposts'...
remote: Counting objects: 255, done.
remote: Compressing objects: 100% (10/10), done.
remote: Total 255 (delta 1), reused 0 (delta 0), pack-reused 245
Receiving objects: 100% (255/255), 32.23 MiB | 4.90 MiB/s, done.
Resolving deltas: 100% (52/52), done.
Checking connectivity... done.
root@juju-build:~# cd blogposts/k8s-existing-env/


# azure group create -n JujuGroup -l "West Europe"
info:    Executing command group create
+ Getting resource group JujuGroup                                             
+ Creating resource group JujuGroup                                            
info:    Created resource group JujuGroup
data:    Id:                  /subscriptions/fc60e5a6-c868-43f4-a364-6b765f3546e3/resourceGroups/JujuGroup
data:    Name:                JujuGroup
data:    Location:            westeurope
data:    Provisioning State:  Succeeded
data:    Tags: null
data:    
info:    group create command OK


~/work/bin/juju bootstrap azure/westeurope --to "subnet=10.0.1.0/24" --config vpc-id=Juju_ARM_VNet --config vpc-id-force=true --bootstrap-constraints "root-disk=128G mem=8G" --bootstrap-series xenial